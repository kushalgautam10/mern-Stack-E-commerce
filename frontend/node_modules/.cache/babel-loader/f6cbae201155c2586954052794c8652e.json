{"ast":null,"code":"var _jsxFileName = \"E:\\\\my document\\\\Projects\\\\mern-Stack-E-commerce\\\\frontend\\\\src\\\\Screens\\\\CartScreen.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Form, Button, ListGroup, Image, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {};\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Shopping Cart\"), cartItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 39\n    }\n  }, \"Your Cart is Empty\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 66\n    }\n  }, \"Go Back\")) : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, cartItems.map(item => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: item.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"$\", item.price), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: item.qty,\n    onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }\n  }, x + 1)))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"Light\",\n    onClick: () => removeFromCartHandler(item.product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Subtotal(\", cartItems.reduce((acc, item) => acc + item.qty, 0), \")\"))))));\n};\n\nexport default CartScreen;","map":{"version":3,"sources":["E:/my document/Projects/mern-Stack-E-commerce/frontend/src/Screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","Form","Button","ListGroup","Image","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","removeFromCartHandler","length","map","item","product","image","name","price","e","target","value","Array","countInStock","keys","x","reduce","acc"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row,Col,Form,Button,ListGroup,Image,Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart} from '../actions/cartActions'\r\nconst CartScreen = ({match,location,history}) => {\r\n  const productId = match.params.id\r\n\r\n  const qty =location.search ? Number(location.search.split('=')[1]) : 1\r\n   \r\n  const dispatch =useDispatch()\r\n\r\n\r\n  const cart =useSelector(state => state.cart)\r\n\r\n  const {cartItems} = cart\r\n  useEffect( () =>{\r\n     if(productId){\r\n       dispatch(addToCart(productId,qty))\r\n     }\r\n  },[dispatch, productId, qty])\r\n\r\nconst removeFromCartHandler = (id) =>{\r\n\r\n}\r\n\r\n  return (\r\n        <Row>\r\n          <Col md ={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? <Message>Your Cart is Empty<Link to ='/'>\r\n            Go Back</Link></Message> : (\r\n              <ListGroup variant ='flush'>\r\n                {cartItems.map( item =>(\r\n                  <ListGroup.Item key ={item.product}>\r\n                   <Row>\r\n                     <Col md ={2}>\r\n                       <Image src ={item.image} alt = {item.name} fluid rounded/>\r\n                     </Col>\r\n                     <Col md ={3}>\r\n                <Link to ={`/product/${item.product}`}>{item.name}</Link>\r\n                     </Col>\r\n                <Col md ={2}>${item.price}</Col>\r\n                <Col md ={2}>\r\n                <Form.Control \r\n                              as = 'select' \r\n                              value ={item.qty} \r\n                              onChange ={(e) =>dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                              >\r\n                              {[...Array(item.countInStock).keys()].map(x => (\r\n                               <option key={x + 1} value ={x + 1}>\r\n                                {x + 1}\r\n                                </option>\r\n                                ))}\r\n                </Form.Control>\r\n                </Col>\r\n                <Col md ={2}>\r\n                  <Button type ='button' variant ='Light' onClick ={() => removeFromCartHandler(item.product)}>\r\n                    <i className = 'fas fa-trash'></i>\r\n                  </Button>\r\n                </Col>\r\n                   </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n\r\n       \r\n          <Col md ={4}>\r\n           <Card>\r\n             <ListGroup variant= 'flush'>\r\n               <ListGroup.Item>\r\n                <h2>Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n               </ListGroup.Item>\r\n             </ListGroup>\r\n           </Card>\r\n          </Col>\r\n\r\n         \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}