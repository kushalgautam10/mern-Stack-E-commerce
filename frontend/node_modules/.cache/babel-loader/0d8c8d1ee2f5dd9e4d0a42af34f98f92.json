{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst CartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: CartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/my document/Projects/mern-Stack-E-commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","CartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,2BAAzD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,kBADe;AAE5BK,EAAAA,cAAc,EAAEJ,qBAFY;AAG5BK,EAAAA,IAAI,EAACJ;AAHuB,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAkF,EAA9G;AAEA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAE;AAACO,IAAAA,SAAS,EAAEN;AAAZ;AADW,CAArB;AAIA,MAAMO,UAAU,GAAE,CAAChB,KAAD,CAAlB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CACrBQ,OADqB,EACbS,YADa,EAErBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAFE,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer} from './reducers/productReducer'\r\nimport {cartReducer} from './reducers/cartReducers' \r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart:cartReducer,\r\n})\r\n\r\nconst CartItemsFromStorage =localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')): []\r\n\r\nconst initialState = {\r\n    cart: {cartItems: CartItemsFromStorage}\r\n}\r\n\r\nconst middleware =[thunk]\r\n\r\nconst store = createStore(\r\n    reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}